name: Build the executables, deploy on GitHub Tag Release & Itch

on:
  push:
    tags:
      - "v*.*.*"

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            itch_channel: osx
            itch_package: app/out/**/*.zip
          - os: windows-latest
            itch_channel: windows
            itch_package: app/out/**/*Setup.exe

    steps:
      - uses: actions/checkout@v2

      - name: Get binksi version from package.json
        id: package-version
        uses: beaconbrigade/package-json-version@v0.3

      - name: Set game configuration
        env:
          APP_NAME: binksi
          DESCRIPTION: bipsi plus ink equals less than three

          # This must be of the format "N.N.N", where the N's are all numbers
          VERSION: ${{ steps.package-version.outputs.version }}

          # By default, the author will be your name on GitHub. You can manually change this.
          AUTHOR: ${{ github.repository_owner }}
        run: |
          echo "APP_NAME=${APP_NAME}" >> $GITHUB_ENV
          echo "DESCRIPTION=${DESCRIPTION}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "AUTHOR=${AUTHOR}" >> $GITHUB_ENV

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Test for presence of Windows codesigning secrets
        id: vars
        shell: bash
        run: |
          unset HAS_WINDOWS_CREDS
          if [[ -n $CERTIFICATE_WINDOWS_PFX ]]; then HAS_WINDOWS_CREDS='true' ; fi
          echo set-output name=HAS_WINDOWS_CREDS::${HAS_WINDOWS_CREDS}
        env:
          CERTIFICATE_WINDOWS_PFX: ${{ secrets.CERTIFICATE_WINDOWS_PFX }}

      - name: Check out Electron app template
        uses: actions/checkout@v2
        with:
          repository: lazerwalker/electron-wrapper-template
          ref: v1.1.0
          path: app

      - name: Set up Electron app environment
        working-directory: ./app
        run: npm install

      # insures that the index.html has been built
      - name: install, build website
        run: yarn && yarn build

      - name: setup windows size to 1080x600
        run: |
          sed -i'.bak' 's/1024/1080/g' app/src/index.js
          sed -i'.bak' 's/768/600/g' app/src/index.js

      - name: move webapp into Electron folder
        run: |
          cp -r ./dist/* ./app/src
          mv ./docs/icon.png ./app

      - name: Generate icons
        working-directory: ./app
        run: npm run build-icons

      - name: Add MacOS certs
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          if ! [[ -n $CERTIFICATE_OSX_APPLICATION && -n $CERTIFICATE_PASSWORD ]]; then exit 0 ; fi
          KEY_CHAIN=build.keychain
          CERTIFICATE_P12=certificate.p12
          echo $CERTIFICATE_OSX_APPLICATION | base64 --decode > $CERTIFICATE_P12
          security create-keychain -p actions $KEY_CHAIN
          security default-keychain -s $KEY_CHAIN
          security unlock-keychain -p actions $KEY_CHAIN
          security import $CERTIFICATE_P12 -k $KEY_CHAIN -P $CERTIFICATE_PASSWORD -T /usr/bin/codesign;
          security set-key-partition-list -S apple-tool:,apple: -s -k actions $KEY_CHAIN
          rm -fr *.p12
        env:
          CERTIFICATE_OSX_APPLICATION: ${{ secrets.CERTIFICATE_OSX_APPLICATION }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}

      - name: Add Windows certificate
        if: matrix.os == 'windows-latest' && steps.vars.outputs.HAS_WINDOWS_CREDS
        id: write_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: "win-certificate.pfx"
          encodedString: ${{ secrets.CERTIFICATE_WINDOWS_PFX }}

      - name: Set description and version number
        run: |
          node -e "\
          const fs = require('fs');\
          const pkg=require('./app/package.json');\
          pkg.description=process.env.DESCRIPTION;\
          pkg.version=process.env.VERSION;\
          pkg.author=process.env.AUTHOR;\
          fs.writeFileSync('./app/package.json',JSON.stringify(pkg,undefined,'\t'));"

      - name: Build the app
        working-directory: ./app
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_PROVIDER: ${{ secrets.APPLE_PROVIDER }}
          CERTIFICATE_NAME: ${{ secrets.CERTIFICATE_NAME }}
          WINDOWS_PFX_FILE: ${{ steps.write_file.outputs.filePath }}
          WINDOWS_PFX_PASSWORD: ${{ secrets.WINDOWS_PFX_PASSWORD }}
        run: npm run make

      - name: Release on GitHub (link to current tag)
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
           files: |
            app/out/**/*.deb
            app/out/**/*.dmg
            app/out/**/*Setup.exe
            app/out/**/*.rpm
            app/out/**/*.zip

      - name: Deploy to Itch ðŸš€
        uses: manleydev/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: ${{ matrix.itch_channel }}
          ITCH_GAME: binksi
          ITCH_USER: smwhr
          PACKAGE: ${{ matrix.itch_package }}
